@page "/bao-cao-hang-xuat"
@using BlazorServerApp.Models
@using Microsoft.EntityFrameworkCore
@inject BlazorServerApp.Data.AppDbContext _context

<div class="container-fluid p-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-light">
                    <h5 class="mb-0">Báo Cáo Chi Tiết Hàng Xuất</h5>
                </div>
                <div class="card-body">
                    <div class="row g-3 mb-3">
                        <div class="col-md-3">
                            <label class="form-label">Từ ngày:</label>
                            <InputDate class="form-control" @bind-Value="tuNgay" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Đến ngày:</label>
                            <InputDate class="form-control" @bind-Value="denNgay" />
                        </div>
                        <div class="col-md-3 align-self-end">
                            <button class="btn btn-primary" @onclick="TimKiem">Tìm kiếm</button>
                        </div>
                    </div>

                    @if (baoCaoHangXuatDTOs != null && baoCaoHangXuatDTOs.Any())
                    {
                        <div class="table-responsive mt-4">
                            <table class="table table-bordered table-striped table-hover">
                                <thead class="table-primary text-center">
                                    <tr >
                                        <th>Ngày xuất</th>
                                        <th>Số phiếu xuất</th>
                                        <th>Mã sản phẩm</th>
                                        <th>Tên sản phẩm</th>
                                        <th>Số lượng xuất</th>
                                        <th>Đơn giá</th>
                                        <th>Trị giá</th>
                                    </tr>
                                </thead>
                                <tbody class="text-center">
                                    @foreach (var baoCaoHangXuatDTO in baoCaoHangXuatDTOs)
                                    {
                                        <tr>
                                            <td>@baoCaoHangXuatDTO.NgayXuat.ToString("dd/MM/yyyy")</td>
                                            <td>@baoCaoHangXuatDTO.SoPhieuXuat</td>
                                            <td>@baoCaoHangXuatDTO.MaSanPham</td>
                                            <td>@baoCaoHangXuatDTO.TenSanPham</td>
                                            <td>@baoCaoHangXuatDTO.SoLuongXuat</td>
                                            <td>@baoCaoHangXuatDTO.DonGia.ToString("N0")</td>
                                            <td>@baoCaoHangXuatDTO.TriGia.ToString("N0")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="fw-bold">
                                        <td colspan="6" class="text-end">Tổng trị giá:</td>
                                        <td>@baoCaoHangXuatDTOs.Sum(b => b.TriGia).ToString("N0")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else if (daTim)
                    {
                        <p>Không có dữ liệu phù hợp.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private DateTime tuNgay = DateTime.Today.AddDays(-30);
    private DateTime denNgay = DateTime.Today;
    private List<BaoCaoHangXuatDTO> baoCaoHangXuatDTOs = new();
    private bool daTim = false;

    private async Task TimKiem()
    {
        daTim = true;
        baoCaoHangXuatDTOs = await _context.PhieuXuatRawDatas
            .Include(p => p.SanPham)
            .ThenInclude(p => p.DonViTinh)
            .Include(p => p.PhieuXuat)
       
            .Where(p => p.PhieuXuat.NgayXuatKho >= tuNgay && p.PhieuXuat.NgayXuatKho <= denNgay)
            .Select(p => new BaoCaoHangXuatDTO
            {
                NgayXuat = p.PhieuXuat.NgayXuatKho,
                SoPhieuXuat = p.PhieuXuat.SoPhieuXuatKho,
                MaSanPham = p.SanPham.MaSanPham,
                TenSanPham = p.SanPham.TenSanPham,
                SoLuongXuat = p.SoLuongXuat,
                DonGia = p.DonGiaXuat,
                TriGia = p.SoLuongXuat * p.DonGiaXuat
            })
            .ToListAsync();
    }
}
